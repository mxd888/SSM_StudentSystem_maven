<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!-- 若报错则在此处写 <!DOCTYPE xml> -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>StudentSystem</display-name>
	<welcome-file-list>
		<welcome-file>/WEB-INF/jsp/index.jsp</welcome-file>
	</welcome-file-list>


	<!--applicationContext.xml是全局的，应用于多个servelet，配合listener一起使用 -->
	<!-- 如果是监听多个文件，可用‘，’隔开 -->

	<listener>
		   
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		 
	</listener>

	<context-param>
		<!-- <description>配置Spring配置文件路径</description> -->
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
		 
	</context-param>
	 
	  <!-- 定义SPRING监听器，加载spring -->
	  <!-- <listener>     <listener-class>       org.springframework.web.context.request.RequestContextListener 
		    </listener-class>   </listener> -->
	 
	 
	 
	  <!--log4j配置文件加载 -->
	 <!-- <context-param>     <param-name>log4jConfigLocation</param-name>   
		  <param-value>classpath:resources/log4j.properties</param-value>   </context-param> 
		  启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化   <context-param>     <param-name>log4jRefreshInterval</param-name> 
		    <param-value>1800000</param-value>   </context-param>   <context-param> 
		    <param-name/>     <param-value/>   </context-param> -->
	 
	  <!-- 配置Spring字符编码过滤器 -->
	 
	<filter>
		   
		<filter-name>encodingFilter</filter-name>
		   
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		   
		<init-param>
			     
			<param-name>encoding</param-name>
			     
			<param-value>UTF-8</param-value>
			   
		</init-param>
		   
		<init-param>
			     
			<param-name>forceEncoding</param-name>
			     
			<param-value>true</param-value>
			   
		</init-param>
		 
	</filter>
	 
	<filter-mapping>
		   
		<filter-name>encodingFilter</filter-name>
		   
		<url-pattern>/*</url-pattern>
		 
	</filter-mapping>
	 
	  <!-- Spring MVC 核心控制器 DispatcherServlet 配置开始 -->
	  <!--配置springmvc DispatcherServlet -->
	  <!--配置控制器 -->
	 
	<servlet>
		   
		<servlet-name>SpringMVC</servlet-name>
		   
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		   
		<init-param>
			      <!--初始化控制器 -->
			     
			<param-name>contextConfigLocation</param-name>
			      <!-- 如果是监听多个文件，可用‘，’隔开 -->
			     
			<param-value>classpath:SpringMVC.xml</param-value>
			   
		</init-param>
		   
		<load-on-startup>1</load-on-startup>
		   
		<async-supported>true</async-supported>
		 
	</servlet>
	 <!-- 控制器映射 -->
	  <!-- 拦截设置 -->
	 
	<servlet-mapping>
		   
		<servlet-name>SpringMVC</servlet-name>
		    <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
		   
		<url-pattern>/</url-pattern>
		 
	</servlet-mapping>
	  <!-- Spring MVC 核心配置结束 -->
	 
	  <!-- 激活Tomcat的defaultServlet来处理静态文件 -->
	 
	<servlet-mapping>
		   
		<servlet-name>default</servlet-name>
		   
		<url-pattern>/static/*</url-pattern>
		 
	</servlet-mapping>
	 
	  <!-- session 时间 -->
	 
	<session-config>
		   
		<session-timeout>30</session-timeout>
		 
	</session-config>

<!-- log4j2-begin -->
     <listener>
         <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>
     <filter>
         <filter-name>log4jServletFilter</filter-name>
         <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
     </filter>
     <filter-mapping>
         <filter-name>log4jServletFilter</filter-name>
         <url-pattern>/*</url-pattern>
         <dispatcher>REQUEST</dispatcher>
         <dispatcher>FORWARD</dispatcher>
         <dispatcher>INCLUDE</dispatcher>
         <dispatcher>ERROR</dispatcher>
     </filter-mapping>
     <!-- log4j2-end -->

	<!-- druid的监控配置 -->
  <servlet>
    <servlet-name>StatViewServlet</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <!--登陆名-->
    <init-param>
      <param-name>loginUsername</param-name>
      <param-value>wanglingling</param-value>
    </init-param>
    <!-- 登录密码-->
    <init-param>
      <param-name>loginPassword</param-name>
      <param-value>wanglingling</param-value>
    </init-param>
    <!--白名单-->
    <init-param>
      <param-name>allow</param-name>
      <param-value></param-value>
    </init-param>
    <!--黑名单-->
    <init-param>
      <param-name>deny</param-name>
      <param-value></param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>StatViewServlet</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>


  <filter>
    <filter-name>WebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <!--过滤的样式-->
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.css,*.ico,*.jpg,*.png,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>WebStatFilter</filter-name>
    <servlet-name>StatViewServlet</servlet-name>
  </filter-mapping>
  <!--druid监控配置结束-->


</web-app>